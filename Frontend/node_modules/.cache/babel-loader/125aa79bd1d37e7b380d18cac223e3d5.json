{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code It Babyy\\\\web dev\\\\Projects\\\\multiplayer-chess-game\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { gameSubject, initGame } from \"./gameLogic/Game\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [board, setBoard] = useState([]);\n  useEffect(() => {\n    initGame();\n    const subscribe = gameSubject.subscribe(observer => {\n      setBoard(observer.board);\n    });\n    return;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: console.log(\"board\", board)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"jMNr9OUCnGXRnWCrgJjYZl+B82M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Code It Babyy/web dev/Projects/multiplayer-chess-game/src/App.js"],"names":["logo","gameSubject","initGame","useEffect","useState","App","board","setBoard","subscribe","observer","console","log"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,kBAApC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAK;AACbD,IAAAA,QAAQ;AACR,UAAMM,SAAS,GAAGP,WAAW,CAACO,SAAZ,CAAuBC,QAAD,IAAa;AACnDF,MAAAA,QAAQ,CAACE,QAAQ,CAACH,KAAV,CAAR;AACD,KAFiB,CAAlB;AAGA;AACD,GANQ,CAAT;AAOA,sBAAO;AAAA,cACJI,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAArB;AADI;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD;;GAZQD,G;;KAAAA,G;AAcT,eAAeA,GAAf","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {gameSubject, initGame} from \"./gameLogic/Game\"\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [board, setBoard] = useState([])\n  useEffect(()=> {\n    initGame();\n    const subscribe = gameSubject.subscribe((observer)=> {\n      setBoard(observer.board)\n    })\n    return \n  })\n  return <div>\n    {console.log(\"board\", board)}\n  </div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}